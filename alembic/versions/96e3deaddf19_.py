"""empty message

Revision ID: 96e3deaddf19
Revises: 
Create Date: 2024-12-06 12:07:07.157853

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96e3deaddf19'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('breeds',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_breeds_id'), 'breeds', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('staff',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('other_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_id'), 'staff', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_activated', sa.BOOLEAN(), nullable=True),
    sa.Column('is_suspended', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('other_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('Followings',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('following_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'following_id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('shops',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('street_name', sa.String(length=255), nullable=False),
    sa.Column('house_number', sa.String(length=10), nullable=False),
    sa.Column('Business_reg_no', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_shops_id'), 'shops', ['id'], unique=False)
    op.create_table('staff_resident',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('house_no', sa.Integer(), nullable=True),
    sa.Column('street_name', sa.String(length=100), nullable=False),
    sa.Column('lga', sa.String(length=100), nullable=False),
    sa.Column('state_of_origin', sa.String(length=100), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_resident_id'), 'staff_resident', ['id'], unique=False)
    op.create_table('users_resident_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('house_no', sa.Integer(), nullable=True),
    sa.Column('street_name', sa.String(length=100), nullable=False),
    sa.Column('lga', sa.String(length=100), nullable=False),
    sa.Column('state_of_origin', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_resident_info_id'), 'users_resident_info', ['id'], unique=False)
    op.create_table('verification_code',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_used', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_verification_code_code'), 'verification_code', ['code'], unique=False)
    op.create_index(op.f('ix_verification_code_id'), 'verification_code', ['id'], unique=False)
    op.create_table('pups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), nullable=True),
    sa.Column('img_urls', sa.JSON(), nullable=True),
    sa.Column('breed_id', sa.Integer(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['breed_id'], ['breeds.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_acccount_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_activated', sa.BOOLEAN(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_suspended', sa.BOOLEAN(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shop_id')
    )
    op.create_index(op.f('ix_shop_acccount_status_id'), 'shop_acccount_status', ['id'], unique=False)
    op.create_table('staffs_roles',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'role_id')
    )
    op.create_table('pups_breed',
    sa.Column('pups_id', sa.Integer(), nullable=False),
    sa.Column('breed_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breed_id'], ['breeds.id'], ),
    sa.ForeignKeyConstraint(['pups_id'], ['pups.id'], ),
    sa.PrimaryKeyConstraint('pups_id', 'breed_id')
    )
    op.create_table('pups_category',
    sa.Column('pups_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['pups_id'], ['pups.id'], ),
    sa.PrimaryKeyConstraint('pups_id', 'category_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pups_category')
    op.drop_table('pups_breed')
    op.drop_table('staffs_roles')
    op.drop_index(op.f('ix_shop_acccount_status_id'), table_name='shop_acccount_status')
    op.drop_table('shop_acccount_status')
    op.drop_table('pups')
    op.drop_index(op.f('ix_verification_code_id'), table_name='verification_code')
    op.drop_index(op.f('ix_verification_code_code'), table_name='verification_code')
    op.drop_table('verification_code')
    op.drop_index(op.f('ix_users_resident_info_id'), table_name='users_resident_info')
    op.drop_table('users_resident_info')
    op.drop_index(op.f('ix_staff_resident_id'), table_name='staff_resident')
    op.drop_table('staff_resident')
    op.drop_index(op.f('ix_shops_id'), table_name='shops')
    op.drop_table('shops')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('Followings')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_staff_id'), table_name='staff')
    op.drop_table('staff')
    op.drop_table('categories')
    op.drop_index(op.f('ix_breeds_id'), table_name='breeds')
    op.drop_table('breeds')
    # ### end Alembic commands ###
